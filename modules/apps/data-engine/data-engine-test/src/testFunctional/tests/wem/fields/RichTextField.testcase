@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "5"
	test DragAndDropRichTextToBuilder {
		DataEngine.addField(
			fieldFieldLabel = "LPS98076",
			fieldName = "Rich Text");

		DataEngine.viewField(
			fieldFieldLabel = "LPS98076",
			fieldName = "Rich Text");
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "5"
	test ExcludeRepeatedRichTextOnWebContent {
		DataEngine.addField(
			fieldFieldLabel = "Test",
			fieldName = "Rich Text");

		DataEngine.editFieldRepeatable(fieldFieldLabel = "Test");

		WebContentStructures.saveCP();

		Navigator.gotoNavTab(navTab = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(webContentTitle = "WC WebContent Title");

		DataEngine.addRepeatableField(fieldName = "Test");

		DataEngine.assertFieldRepeated(
            fieldReference = "RichText",
            index = "2");

		Click(locator1 = "DDMField#REMOVE_REPEATED_FIELD");

		DataEngine.assertFieldRepeatedNotPresent(
            fieldReference = "RichText",
            index = "2");
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "5"
	test InsertTextOnRichTextOnWebContent {
		DataEngine.addField(
			fieldFieldLabel = "Test",
			fieldName = "Rich Text");

		DataEngine.editFieldRequired(fieldFieldLabel = "Test");

		WebContentStructures.saveCP();

		Navigator.gotoNavTab(navTab = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(webContentTitle = "WC WebContent Title");

		CKEditor.addContentInWebContent(
			content = "Hello",
			fieldLabel = "Test");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		SelectFrame.selectFrameNoLoading(
			key_fieldLabel = "Test",
			locator1 = "CKEditor#BODY_FIELD_IFRAME_WEB_CONTENT_ARTICLE");

		AssertTextEquals(
			locator1 = "CKEditor#BODY",
			value1 = "Hello");
	}

	@description = "This is a test for LPS-98076. Verify that a user can localize the field data."
	@priority = "4"
	test LocalizationOfRichTextPersists {
		DataEngine.addField(
			fieldFieldLabel = "Rich Text",
			fieldName = "Rich Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Rich Text",
			fieldHelp = "Rich Text Help Text");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContentStructures.addName(structureName = "Nome da Estrutura WC");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Rich Text",
			fieldFieldLabelEdit = "Rico Texto");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Rico Texto",
			fieldHelp = "Rico Texto Socorro Texto");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "WC Structure Name");

		AssertVisible(
			key_fieldFieldLabel = "Rich Text",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertTextEquals(
			key_fieldFieldLabel = "Rich Text",
			locator1 = "DDMEditStructure#SETTINGS_TEXT",
			value1 = "Rich Text Help Text");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "Nome da Estrutura WC");

		AssertVisible(
			key_fieldFieldLabel = "Rico Texto",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL");

		AssertTextEquals(
			key_fieldFieldLabel = "Rico Texto",
			locator1 = "DDMEditStructure#SETTINGS_TEXT",
			value1 = "Rico Texto Socorro Texto");
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "5"
	test RepeatRichTextOnWebContent {
		DataEngine.addField(
			fieldFieldLabel = "Test",
			fieldName = "Rich Text");

		DataEngine.editFieldRepeatable(fieldFieldLabel = "Test");

		WebContentStructures.saveCP();

		Navigator.gotoNavTab(navTab = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(webContentTitle = "WC WebContent Title");

		DataEngine.addRepeatableField(fieldName = "Test");

		DataEngine.assertFieldRepeated(
            fieldReference = "RichText",
            index = "2");	
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@ignore = "true"
	@priority = "4"
	test SetFieldReferenceOfRichText {
		property portal.acceptance = "false";

		// TODO LPS-98076 SetFieldReferenceOfRichText pending implementation

	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@ignore = "true"
	@priority = "3"
	test SetFieldReferenceOfRichTextWithInvalidCharacters {
		property portal.acceptance = "false";

		// TODO LPS-98076 SetFieldReferenceOfRichTextWithInvalidCharacters pending implementation
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "5"
	test SetHelpTextOfRichText {
		DataEngine.addField(
			fieldFieldLabel = "FieldTest",
			fieldName = "Rich Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "FieldTest",
			fieldHelp = "Choose as many content pieces as you would like to feature.");

		DataEngine.viewField(
			fieldFieldLabel = "FieldTest",
			fieldName = "Rich Text");

		AssertTextEquals(
			key_fieldFieldLabel = "FieldTest",
			locator1 = "DDMEditStructure#SETTINGS_TEXT",
			value1 = "Choose as many content pieces as you would like to feature.");
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "5"
	test SetLabelOfRichText {
		DataEngine.addField(
			fieldFieldLabel = "Test",
			fieldName = "Rich Text");

		FormViewBuilder.editFieldLabel(
			fieldLabel = "Test",
			label = "LPS98076 Tests");

		AssertTextEquals(
			locator1 = "FormViewBuilder#SIDEBAR_BASIC_LABEL",
			value1 = "LPS98076 Tests");
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@ignore = "true"
	@priority = "3"
	test SetRichTextAsRepeatable {
		property portal.acceptance = "false";

		// TODO LPS-98081 SetRichTextAsRepeatable pending implementation
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@ignore = "true"
	@priority = "4"
	test SetRichTextSearchableAsByKeyword {
		property portal.acceptance = "false";

		// TODO LPS-98076 SetRichTextSearchableAsByKeyword pending implementation
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@ignore = "true"
	@priority = "4"
	test SetRichTextSearchableAsDisabled {
		property portal.acceptance = "false";

		// TODO LPS-98076 SetRichTextSearchableAsDisabled pending implementation
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@ignore = "true"
	@priority = "3"
	test ShowAndHideRichTextLabel {
		property portal.acceptance = "false";

		// TODO LPS-98081 ShowAndHideRichTextLabel pending implementation
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "4"
	test VerifyHelpTextofRichTextOnWebContent {
		DataEngine.addField(
			fieldFieldLabel = "Rich Text",
			fieldName = "Rich Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Rich Text",
			fieldHelp = "Rich Text Help Text");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			webContentRichText = "This is a Rich Text field",
			webContentTitle = "Web Content Title");

		FormFields.viewFieldHelpText(
			fieldHelpText = "Rich Text Help Text",
			fieldName = "RichText");
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@priority = "4"
	test VerifyRequiredPropertyOfRichText {
		DataEngine.addField(
			fieldFieldLabel = "Test",
			fieldName = "Rich Text");

		DataEngine.editFieldRequired(fieldFieldLabel = "Test");

		AssertClick.assertPartialTextClickAt(
			key_fieldFieldLabel = "Test",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER",
			value1 = "Test");

		Uncheck.uncheckToggleSwitch(
			checkboxName = "Required Field",
			locator1 = "Checkbox#ANY_CHECKBOX");
	}

	@description = "This is a test for LPS-98076. As a Developer, I want to Implement the HTML field type"
	@ignore = "true"
	@priority = "5"
	test VerifyRichTextIsSetAsRequired {
		property portal.acceptance = "false";

		// TODO LPS-98081 VerifyRichTextIsSetAsRequired pending implementation
	}

}